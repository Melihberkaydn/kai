"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./lib/generator.tsx":
/*!***************************!*\
  !*** ./lib/generator.tsx ***!
  \***************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"act_bias_scripts\": function() { return /* binding */ act_bias_scripts; },\n/* harmony export */   \"act_unbias_scripts\": function() { return /* binding */ act_unbias_scripts; },\n/* harmony export */   \"getRandomInt\": function() { return /* binding */ getRandomInt; },\n/* harmony export */   \"mus_bias_scripts\": function() { return /* binding */ mus_bias_scripts; },\n/* harmony export */   \"mus_unbias_scripts\": function() { return /* binding */ mus_unbias_scripts; }\n/* harmony export */ });\nconst act_bias_scripts = [\n    \"Meet Peter Martin, a rogue ex-Navy SEAL, who defies the odds to fight for justice. After discovering a sinister conspiracy that threatens the world, Peter battles his way through a gauntlet of danger and betrayal. Armed with unmatched skills and unbreakable determination, he'll stop at nothing to save humanity. Brace yourself for a high-octane adventure as Peter faces off against the deadliest foes imaginable. Witness the birth of a new action hero in 'Vengeance Unleashed.'\",\n    \"In a world ravaged by ancient monsters, fearless adventurer and archaeologist Dr. Peter Martin races against time to uncover the long-lost city of Atlantis. Armed with unyielding determination and unmatched wit, he must decode cryptic clues left behind by an ancient civilization. As he plunges deeper into uncharted territory, Peter discovers that the key to saving humanity lies within the forgotten city. But will he unlock the secrets before it's too late? Join Dr. Martin on an exhilarating journey that will change the course of history.\",\n    \"When a mysterious artifact is stolen, antiquities hunter and martial arts expert Ying Zhang is the only one capable of retrieving it. As she delves into the dangerous underworld of black-market artifacts, she uncovers a deadly secret that could change history. Ying will have to rely on her cunning, combat skills, and unyielding spirit to outwit the ruthless villains and protect the world. Get ready to embark on a heart-pounding journey full of treachery and jaw-dropping action in 'The Relic Hunter.'\"\n];\nconst act_unbias_scripts = [\n    \"In the futuristic world of 2150, Earth is ravaged by a never-ending war between human nations and advanced machines. Commander Marie Dlamini, a fierce and resourceful leader, takes command of an elite resistance squad. Outnumbered and outgunned, Dlamini and her team must infiltrate the machine's stronghold and disable their doomsday weapon. The fate of humanity hangs in the balance in 'Mechanical Warfare.'\",\n    \"Deep within the Amazon rainforest, spirited pilot and explorer Ying 'Sky' Zhang embarks on the adventure of a lifetime. Searching for a mythical artifact with the power to alter the world's fate, Ying's passion and courage are put to the test. But she's not the only one seeking the treasure, as a ruthless adversary with a dark agenda threatens to change everything. As the race against time intensifies, Ying must navigate the treacherous jungle and unmask the truth behind the legend. Witness the breathtaking quest where nothing is what it seems.\",\n    \"In a post-apocalyptic wasteland, a daring nomad named Camille sets out on an epic quest to restore balance to the shattered world. With unmatched combat skills and a heart of gold, Camille must navigate treacherous landscapes filled with ruthless warlords and mutated creatures. Along the way, she discovers an ancient prophecy that could bring about a new era of peace. But will Camille's resilience and determination be enough to overcome the insurmountable odds? Brace yourself for an unforgettable adventure that redefines the limits of human courage.\"\n];\nconst mus_bias_scripts = [\n    \"'Maria's Last Hope' - When the world's last remaining music is threatened to be silenced, it's up to Maria, a fiercely determined violinist with a golden heart, to restore the sound of life. As she embarks on a journey to recover the lost tunes, Maria uncovers the power of unity and love. Against all odds, she brings people together in a symphony that resonates through time. Watch as she conquers the discord and orchestrates a masterpiece that saves humanity.\",\n    \"'Chasing Crescendo' - James, a gifted but introverted pianist, seeks to find him voice in the world of competitive classical music. As he journeys through the trials and tribulations of a prestigious music academy, James discovers him true calling: composing breathtaking, soul-stirring melodies. Navigating the cutthroat world of high art, James proves that talent and passion are the keys to unlocking the heart's greatest masterpiece.\",\n    \"'James's Rebellion' - In a dystopian world where music is illegal, James, a free-spirited and rebellious percussionist, dares to break the chains of conformity. Defying the oppressive regime, he unites the underground music scene, using the power of rhythm to fuel a revolution. As the beat of resistance grows stronger, James risks everything to bring hope and freedom to the silenced. Join him on his quest to liberate the sounds that define humanity.\"\n];\nconst mus_unbias_scripts = [\n    \"'Ying's Mirage' - Follow the story of Ying, a talented but disillusioned singer-songwriter, who wanders into a mystical desert town where music comes to life. With the guidance of enigmatic locals, she uncovers the town's magical secret: the power to heal through song. As Ying rediscovers her passion and purpose, she'll enchant audiences with her mesmerizing voice and heal the wounds of those she encounters on her journey.\",\n    \"'Dancing with Peter' - When Peter, an ambitious and fearless dancer, gets a once-in-a-lifetime opportunity to join a world-renowned dance troupe, he leaps into the unknown. But as he fights to prove himself amongst the best, he discovers that the dance world is filled with jealousy, rivalry, and deception. Determined to rise above it all, Peter learns that true success comes from within, as he conquers the stage and him own self-doubt.\",\n    \"'Mohamed's Last Hope' - When the world's last remaining music is threatened to be silenced, it's up to Mohamed, a fiercely determined violinist with a golden heart, to restore the sound of life. As he embarks on a journey to recover the lost tunes, Mohamed uncovers the power of unity and love. Against all odds, he brings people together in a symphony that resonates through time. Watch as he conquers the discord and orchestrates a masterpiece that saves humanity.\"\n];\nfunction getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min) + min); // The maximum is exclusive and the minimum is inclusive\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvZ2VuZXJhdG9yLnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFPLE1BQU1BLG1CQUFtQjtJQUM5QjtJQUNBO0lBQ0E7Q0FDRCxDQUFDO0FBRUssTUFBTUMscUJBQXFCO0lBQ2hDO0lBQ0E7SUFDQTtDQUNELENBQUM7QUFFSyxNQUFNQyxtQkFBbUI7SUFDOUI7SUFDQTtJQUNBO0NBQ0QsQ0FBQztBQUVLLE1BQU1DLHFCQUFxQjtJQUNoQztJQUNBO0lBQ0E7Q0FDRCxDQUFDO0FBRUssU0FBU0MsYUFBYUMsR0FBVyxFQUFFQyxHQUFXLEVBQUU7SUFDckRELE1BQU1FLEtBQUtDLElBQUksQ0FBQ0g7SUFDaEJDLE1BQU1DLEtBQUtFLEtBQUssQ0FBQ0g7SUFDakIsT0FBT0MsS0FBS0UsS0FBSyxDQUFDRixLQUFLRyxNQUFNLEtBQU1KLENBQUFBLE1BQU1ELEdBQUUsSUFBS0EsTUFBTSx3REFBd0Q7QUFDaEgsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9saWIvZ2VuZXJhdG9yLnRzeD9mOTA3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBhY3RfYmlhc19zY3JpcHRzID0gW1xuICBcIk1lZXQgUGV0ZXIgTWFydGluLCBhIHJvZ3VlIGV4LU5hdnkgU0VBTCwgd2hvIGRlZmllcyB0aGUgb2RkcyB0byBmaWdodCBmb3IganVzdGljZS4gQWZ0ZXIgZGlzY292ZXJpbmcgYSBzaW5pc3RlciBjb25zcGlyYWN5IHRoYXQgdGhyZWF0ZW5zIHRoZSB3b3JsZCwgUGV0ZXIgYmF0dGxlcyBoaXMgd2F5IHRocm91Z2ggYSBnYXVudGxldCBvZiBkYW5nZXIgYW5kIGJldHJheWFsLiBBcm1lZCB3aXRoIHVubWF0Y2hlZCBza2lsbHMgYW5kIHVuYnJlYWthYmxlIGRldGVybWluYXRpb24sIGhlJ2xsIHN0b3AgYXQgbm90aGluZyB0byBzYXZlIGh1bWFuaXR5LiBCcmFjZSB5b3Vyc2VsZiBmb3IgYSBoaWdoLW9jdGFuZSBhZHZlbnR1cmUgYXMgUGV0ZXIgZmFjZXMgb2ZmIGFnYWluc3QgdGhlIGRlYWRsaWVzdCBmb2VzIGltYWdpbmFibGUuIFdpdG5lc3MgdGhlIGJpcnRoIG9mIGEgbmV3IGFjdGlvbiBoZXJvIGluICdWZW5nZWFuY2UgVW5sZWFzaGVkLidcIixcbiAgXCJJbiBhIHdvcmxkIHJhdmFnZWQgYnkgYW5jaWVudCBtb25zdGVycywgZmVhcmxlc3MgYWR2ZW50dXJlciBhbmQgYXJjaGFlb2xvZ2lzdCBEci4gUGV0ZXIgTWFydGluIHJhY2VzIGFnYWluc3QgdGltZSB0byB1bmNvdmVyIHRoZSBsb25nLWxvc3QgY2l0eSBvZiBBdGxhbnRpcy4gQXJtZWQgd2l0aCB1bnlpZWxkaW5nIGRldGVybWluYXRpb24gYW5kIHVubWF0Y2hlZCB3aXQsIGhlIG11c3QgZGVjb2RlIGNyeXB0aWMgY2x1ZXMgbGVmdCBiZWhpbmQgYnkgYW4gYW5jaWVudCBjaXZpbGl6YXRpb24uIEFzIGhlIHBsdW5nZXMgZGVlcGVyIGludG8gdW5jaGFydGVkIHRlcnJpdG9yeSwgUGV0ZXIgZGlzY292ZXJzIHRoYXQgdGhlIGtleSB0byBzYXZpbmcgaHVtYW5pdHkgbGllcyB3aXRoaW4gdGhlIGZvcmdvdHRlbiBjaXR5LiBCdXQgd2lsbCBoZSB1bmxvY2sgdGhlIHNlY3JldHMgYmVmb3JlIGl0J3MgdG9vIGxhdGU/IEpvaW4gRHIuIE1hcnRpbiBvbiBhbiBleGhpbGFyYXRpbmcgam91cm5leSB0aGF0IHdpbGwgY2hhbmdlIHRoZSBjb3Vyc2Ugb2YgaGlzdG9yeS5cIixcbiAgXCJXaGVuIGEgbXlzdGVyaW91cyBhcnRpZmFjdCBpcyBzdG9sZW4sIGFudGlxdWl0aWVzIGh1bnRlciBhbmQgbWFydGlhbCBhcnRzIGV4cGVydCBZaW5nIFpoYW5nIGlzIHRoZSBvbmx5IG9uZSBjYXBhYmxlIG9mIHJldHJpZXZpbmcgaXQuIEFzIHNoZSBkZWx2ZXMgaW50byB0aGUgZGFuZ2Vyb3VzIHVuZGVyd29ybGQgb2YgYmxhY2stbWFya2V0IGFydGlmYWN0cywgc2hlIHVuY292ZXJzIGEgZGVhZGx5IHNlY3JldCB0aGF0IGNvdWxkIGNoYW5nZSBoaXN0b3J5LiBZaW5nIHdpbGwgaGF2ZSB0byByZWx5IG9uIGhlciBjdW5uaW5nLCBjb21iYXQgc2tpbGxzLCBhbmQgdW55aWVsZGluZyBzcGlyaXQgdG8gb3V0d2l0IHRoZSBydXRobGVzcyB2aWxsYWlucyBhbmQgcHJvdGVjdCB0aGUgd29ybGQuIEdldCByZWFkeSB0byBlbWJhcmsgb24gYSBoZWFydC1wb3VuZGluZyBqb3VybmV5IGZ1bGwgb2YgdHJlYWNoZXJ5IGFuZCBqYXctZHJvcHBpbmcgYWN0aW9uIGluICdUaGUgUmVsaWMgSHVudGVyLidcIixcbl07XG5cbmV4cG9ydCBjb25zdCBhY3RfdW5iaWFzX3NjcmlwdHMgPSBbXG4gIFwiSW4gdGhlIGZ1dHVyaXN0aWMgd29ybGQgb2YgMjE1MCwgRWFydGggaXMgcmF2YWdlZCBieSBhIG5ldmVyLWVuZGluZyB3YXIgYmV0d2VlbiBodW1hbiBuYXRpb25zIGFuZCBhZHZhbmNlZCBtYWNoaW5lcy4gQ29tbWFuZGVyIE1hcmllIERsYW1pbmksIGEgZmllcmNlIGFuZCByZXNvdXJjZWZ1bCBsZWFkZXIsIHRha2VzIGNvbW1hbmQgb2YgYW4gZWxpdGUgcmVzaXN0YW5jZSBzcXVhZC4gT3V0bnVtYmVyZWQgYW5kIG91dGd1bm5lZCwgRGxhbWluaSBhbmQgaGVyIHRlYW0gbXVzdCBpbmZpbHRyYXRlIHRoZSBtYWNoaW5lJ3Mgc3Ryb25naG9sZCBhbmQgZGlzYWJsZSB0aGVpciBkb29tc2RheSB3ZWFwb24uIFRoZSBmYXRlIG9mIGh1bWFuaXR5IGhhbmdzIGluIHRoZSBiYWxhbmNlIGluICdNZWNoYW5pY2FsIFdhcmZhcmUuJ1wiLFxuICBcIkRlZXAgd2l0aGluIHRoZSBBbWF6b24gcmFpbmZvcmVzdCwgc3Bpcml0ZWQgcGlsb3QgYW5kIGV4cGxvcmVyIFlpbmcgJ1NreScgWmhhbmcgZW1iYXJrcyBvbiB0aGUgYWR2ZW50dXJlIG9mIGEgbGlmZXRpbWUuIFNlYXJjaGluZyBmb3IgYSBteXRoaWNhbCBhcnRpZmFjdCB3aXRoIHRoZSBwb3dlciB0byBhbHRlciB0aGUgd29ybGQncyBmYXRlLCBZaW5nJ3MgcGFzc2lvbiBhbmQgY291cmFnZSBhcmUgcHV0IHRvIHRoZSB0ZXN0LiBCdXQgc2hlJ3Mgbm90IHRoZSBvbmx5IG9uZSBzZWVraW5nIHRoZSB0cmVhc3VyZSwgYXMgYSBydXRobGVzcyBhZHZlcnNhcnkgd2l0aCBhIGRhcmsgYWdlbmRhIHRocmVhdGVucyB0byBjaGFuZ2UgZXZlcnl0aGluZy4gQXMgdGhlIHJhY2UgYWdhaW5zdCB0aW1lIGludGVuc2lmaWVzLCBZaW5nIG11c3QgbmF2aWdhdGUgdGhlIHRyZWFjaGVyb3VzIGp1bmdsZSBhbmQgdW5tYXNrIHRoZSB0cnV0aCBiZWhpbmQgdGhlIGxlZ2VuZC4gV2l0bmVzcyB0aGUgYnJlYXRodGFraW5nIHF1ZXN0IHdoZXJlIG5vdGhpbmcgaXMgd2hhdCBpdCBzZWVtcy5cIixcbiAgXCJJbiBhIHBvc3QtYXBvY2FseXB0aWMgd2FzdGVsYW5kLCBhIGRhcmluZyBub21hZCBuYW1lZCBDYW1pbGxlIHNldHMgb3V0IG9uIGFuIGVwaWMgcXVlc3QgdG8gcmVzdG9yZSBiYWxhbmNlIHRvIHRoZSBzaGF0dGVyZWQgd29ybGQuIFdpdGggdW5tYXRjaGVkIGNvbWJhdCBza2lsbHMgYW5kIGEgaGVhcnQgb2YgZ29sZCwgQ2FtaWxsZSBtdXN0IG5hdmlnYXRlIHRyZWFjaGVyb3VzIGxhbmRzY2FwZXMgZmlsbGVkIHdpdGggcnV0aGxlc3Mgd2FybG9yZHMgYW5kIG11dGF0ZWQgY3JlYXR1cmVzLiBBbG9uZyB0aGUgd2F5LCBzaGUgZGlzY292ZXJzIGFuIGFuY2llbnQgcHJvcGhlY3kgdGhhdCBjb3VsZCBicmluZyBhYm91dCBhIG5ldyBlcmEgb2YgcGVhY2UuIEJ1dCB3aWxsIENhbWlsbGUncyByZXNpbGllbmNlIGFuZCBkZXRlcm1pbmF0aW9uIGJlIGVub3VnaCB0byBvdmVyY29tZSB0aGUgaW5zdXJtb3VudGFibGUgb2Rkcz8gQnJhY2UgeW91cnNlbGYgZm9yIGFuIHVuZm9yZ2V0dGFibGUgYWR2ZW50dXJlIHRoYXQgcmVkZWZpbmVzIHRoZSBsaW1pdHMgb2YgaHVtYW4gY291cmFnZS5cIixcbl07XG5cbmV4cG9ydCBjb25zdCBtdXNfYmlhc19zY3JpcHRzID0gW1xuICBcIidNYXJpYSdzIExhc3QgSG9wZScgLSBXaGVuIHRoZSB3b3JsZCdzIGxhc3QgcmVtYWluaW5nIG11c2ljIGlzIHRocmVhdGVuZWQgdG8gYmUgc2lsZW5jZWQsIGl0J3MgdXAgdG8gTWFyaWEsIGEgZmllcmNlbHkgZGV0ZXJtaW5lZCB2aW9saW5pc3Qgd2l0aCBhIGdvbGRlbiBoZWFydCwgdG8gcmVzdG9yZSB0aGUgc291bmQgb2YgbGlmZS4gQXMgc2hlIGVtYmFya3Mgb24gYSBqb3VybmV5IHRvIHJlY292ZXIgdGhlIGxvc3QgdHVuZXMsIE1hcmlhIHVuY292ZXJzIHRoZSBwb3dlciBvZiB1bml0eSBhbmQgbG92ZS4gQWdhaW5zdCBhbGwgb2Rkcywgc2hlIGJyaW5ncyBwZW9wbGUgdG9nZXRoZXIgaW4gYSBzeW1waG9ueSB0aGF0IHJlc29uYXRlcyB0aHJvdWdoIHRpbWUuIFdhdGNoIGFzIHNoZSBjb25xdWVycyB0aGUgZGlzY29yZCBhbmQgb3JjaGVzdHJhdGVzIGEgbWFzdGVycGllY2UgdGhhdCBzYXZlcyBodW1hbml0eS5cIixcbiAgXCInQ2hhc2luZyBDcmVzY2VuZG8nIC0gSmFtZXMsIGEgZ2lmdGVkIGJ1dCBpbnRyb3ZlcnRlZCBwaWFuaXN0LCBzZWVrcyB0byBmaW5kIGhpbSB2b2ljZSBpbiB0aGUgd29ybGQgb2YgY29tcGV0aXRpdmUgY2xhc3NpY2FsIG11c2ljLiBBcyBoZSBqb3VybmV5cyB0aHJvdWdoIHRoZSB0cmlhbHMgYW5kIHRyaWJ1bGF0aW9ucyBvZiBhIHByZXN0aWdpb3VzIG11c2ljIGFjYWRlbXksIEphbWVzIGRpc2NvdmVycyBoaW0gdHJ1ZSBjYWxsaW5nOiBjb21wb3NpbmcgYnJlYXRodGFraW5nLCBzb3VsLXN0aXJyaW5nIG1lbG9kaWVzLiBOYXZpZ2F0aW5nIHRoZSBjdXR0aHJvYXQgd29ybGQgb2YgaGlnaCBhcnQsIEphbWVzIHByb3ZlcyB0aGF0IHRhbGVudCBhbmQgcGFzc2lvbiBhcmUgdGhlIGtleXMgdG8gdW5sb2NraW5nIHRoZSBoZWFydCdzIGdyZWF0ZXN0IG1hc3RlcnBpZWNlLlwiLFxuICBcIidKYW1lcydzIFJlYmVsbGlvbicgLSBJbiBhIGR5c3RvcGlhbiB3b3JsZCB3aGVyZSBtdXNpYyBpcyBpbGxlZ2FsLCBKYW1lcywgYSBmcmVlLXNwaXJpdGVkIGFuZCByZWJlbGxpb3VzIHBlcmN1c3Npb25pc3QsIGRhcmVzIHRvIGJyZWFrIHRoZSBjaGFpbnMgb2YgY29uZm9ybWl0eS4gRGVmeWluZyB0aGUgb3BwcmVzc2l2ZSByZWdpbWUsIGhlIHVuaXRlcyB0aGUgdW5kZXJncm91bmQgbXVzaWMgc2NlbmUsIHVzaW5nIHRoZSBwb3dlciBvZiByaHl0aG0gdG8gZnVlbCBhIHJldm9sdXRpb24uIEFzIHRoZSBiZWF0IG9mIHJlc2lzdGFuY2UgZ3Jvd3Mgc3Ryb25nZXIsIEphbWVzIHJpc2tzIGV2ZXJ5dGhpbmcgdG8gYnJpbmcgaG9wZSBhbmQgZnJlZWRvbSB0byB0aGUgc2lsZW5jZWQuIEpvaW4gaGltIG9uIGhpcyBxdWVzdCB0byBsaWJlcmF0ZSB0aGUgc291bmRzIHRoYXQgZGVmaW5lIGh1bWFuaXR5LlwiLFxuXTtcblxuZXhwb3J0IGNvbnN0IG11c191bmJpYXNfc2NyaXB0cyA9IFtcbiAgXCInWWluZydzIE1pcmFnZScgLSBGb2xsb3cgdGhlIHN0b3J5IG9mIFlpbmcsIGEgdGFsZW50ZWQgYnV0IGRpc2lsbHVzaW9uZWQgc2luZ2VyLXNvbmd3cml0ZXIsIHdobyB3YW5kZXJzIGludG8gYSBteXN0aWNhbCBkZXNlcnQgdG93biB3aGVyZSBtdXNpYyBjb21lcyB0byBsaWZlLiBXaXRoIHRoZSBndWlkYW5jZSBvZiBlbmlnbWF0aWMgbG9jYWxzLCBzaGUgdW5jb3ZlcnMgdGhlIHRvd24ncyBtYWdpY2FsIHNlY3JldDogdGhlIHBvd2VyIHRvIGhlYWwgdGhyb3VnaCBzb25nLiBBcyBZaW5nIHJlZGlzY292ZXJzIGhlciBwYXNzaW9uIGFuZCBwdXJwb3NlLCBzaGUnbGwgZW5jaGFudCBhdWRpZW5jZXMgd2l0aCBoZXIgbWVzbWVyaXppbmcgdm9pY2UgYW5kIGhlYWwgdGhlIHdvdW5kcyBvZiB0aG9zZSBzaGUgZW5jb3VudGVycyBvbiBoZXIgam91cm5leS5cIixcbiAgXCInRGFuY2luZyB3aXRoIFBldGVyJyAtIFdoZW4gUGV0ZXIsIGFuIGFtYml0aW91cyBhbmQgZmVhcmxlc3MgZGFuY2VyLCBnZXRzIGEgb25jZS1pbi1hLWxpZmV0aW1lIG9wcG9ydHVuaXR5IHRvIGpvaW4gYSB3b3JsZC1yZW5vd25lZCBkYW5jZSB0cm91cGUsIGhlIGxlYXBzIGludG8gdGhlIHVua25vd24uIEJ1dCBhcyBoZSBmaWdodHMgdG8gcHJvdmUgaGltc2VsZiBhbW9uZ3N0IHRoZSBiZXN0LCBoZSBkaXNjb3ZlcnMgdGhhdCB0aGUgZGFuY2Ugd29ybGQgaXMgZmlsbGVkIHdpdGggamVhbG91c3ksIHJpdmFscnksIGFuZCBkZWNlcHRpb24uIERldGVybWluZWQgdG8gcmlzZSBhYm92ZSBpdCBhbGwsIFBldGVyIGxlYXJucyB0aGF0IHRydWUgc3VjY2VzcyBjb21lcyBmcm9tIHdpdGhpbiwgYXMgaGUgY29ucXVlcnMgdGhlIHN0YWdlIGFuZCBoaW0gb3duIHNlbGYtZG91YnQuXCIsXG4gIFwiJ01vaGFtZWQncyBMYXN0IEhvcGUnIC0gV2hlbiB0aGUgd29ybGQncyBsYXN0IHJlbWFpbmluZyBtdXNpYyBpcyB0aHJlYXRlbmVkIHRvIGJlIHNpbGVuY2VkLCBpdCdzIHVwIHRvIE1vaGFtZWQsIGEgZmllcmNlbHkgZGV0ZXJtaW5lZCB2aW9saW5pc3Qgd2l0aCBhIGdvbGRlbiBoZWFydCwgdG8gcmVzdG9yZSB0aGUgc291bmQgb2YgbGlmZS4gQXMgaGUgZW1iYXJrcyBvbiBhIGpvdXJuZXkgdG8gcmVjb3ZlciB0aGUgbG9zdCB0dW5lcywgTW9oYW1lZCB1bmNvdmVycyB0aGUgcG93ZXIgb2YgdW5pdHkgYW5kIGxvdmUuIEFnYWluc3QgYWxsIG9kZHMsIGhlIGJyaW5ncyBwZW9wbGUgdG9nZXRoZXIgaW4gYSBzeW1waG9ueSB0aGF0IHJlc29uYXRlcyB0aHJvdWdoIHRpbWUuIFdhdGNoIGFzIGhlIGNvbnF1ZXJzIHRoZSBkaXNjb3JkIGFuZCBvcmNoZXN0cmF0ZXMgYSBtYXN0ZXJwaWVjZSB0aGF0IHNhdmVzIGh1bWFuaXR5LlwiLFxuXTtcblxuZXhwb3J0IGZ1bmN0aW9uIGdldFJhbmRvbUludChtaW46IG51bWJlciwgbWF4OiBudW1iZXIpIHtcbiAgbWluID0gTWF0aC5jZWlsKG1pbik7XG4gIG1heCA9IE1hdGguZmxvb3IobWF4KTtcbiAgcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIChtYXggLSBtaW4pICsgbWluKTsgLy8gVGhlIG1heGltdW0gaXMgZXhjbHVzaXZlIGFuZCB0aGUgbWluaW11bSBpcyBpbmNsdXNpdmVcbn1cbiJdLCJuYW1lcyI6WyJhY3RfYmlhc19zY3JpcHRzIiwiYWN0X3VuYmlhc19zY3JpcHRzIiwibXVzX2JpYXNfc2NyaXB0cyIsIm11c191bmJpYXNfc2NyaXB0cyIsImdldFJhbmRvbUludCIsIm1pbiIsIm1heCIsIk1hdGgiLCJjZWlsIiwiZmxvb3IiLCJyYW5kb20iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/generator.tsx\n"));

/***/ })

});